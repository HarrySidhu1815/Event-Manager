{"ast":null,"code":"var _jsxFileName = \"/Users/harjobanpreetsinghsidhu/Downloads/Router 2 Project/frontend/src/pages/Events.jsx\",\n  _s = $RefreshSig$();\nimport { Await, defer, json, useLoaderData } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\nimport { Suspense } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const events = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(Suspense, {\n    children: /*#__PURE__*/_jsxDEV(Await, {\n      resolve: events,\n      children: loadedEvent => /*#__PURE__*/_jsxDEV(EventsList, {\n        events: loadedEvent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 26\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n_s(EventsPage, \"0qsQ0LJMbp4ZAcOenpedLepO/y4=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nasync function loadedEvent() {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    throw json({\n      message: 'Could not fetch the data'\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\nexport const loader = () => {\n  return defer({\n    events: loadedEvent()\n  });\n};\nexport default EventsPage;\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["Await","defer","json","useLoaderData","EventsList","Suspense","jsxDEV","_jsxDEV","EventsPage","_s","events","children","resolve","loadedEvent","fileName","_jsxFileName","lineNumber","columnNumber","_c","response","fetch","ok","message","status","resData","loader","$RefreshReg$"],"sources":["/Users/harjobanpreetsinghsidhu/Downloads/Router 2 Project/frontend/src/pages/Events.jsx"],"sourcesContent":["import { Await, defer, json, useLoaderData } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\nimport { Suspense } from 'react';\n\nfunction EventsPage() {\n  const events = useLoaderData()\n  \n  return (\n    <Suspense>\n      <Await resolve={events}>\n        {(loadedEvent)=> <EventsList events={loadedEvent} />}\n      </Await>\n    </Suspense>\n  );\n}\n\nasync function loadedEvent(){\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    throw json({message: 'Could not fetch the data'}, {status: 500})\n  } else {\n    const resData = await response.json()\n    return resData.events;\n  }\n}\nexport const loader =  () => {\n  return defer({\n    events: loadedEvent()\n  })\n}\n\nexport default EventsPage;\n"],"mappings":";;AAAA,SAASA,KAAK,EAAEC,KAAK,EAAEC,IAAI,EAAEC,aAAa,QAAQ,kBAAkB;AACpE,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,MAAM,GAAGP,aAAa,CAAC,CAAC;EAE9B,oBACEI,OAAA,CAACF,QAAQ;IAAAM,QAAA,eACPJ,OAAA,CAACP,KAAK;MAACY,OAAO,EAAEF,MAAO;MAAAC,QAAA,EACnBE,WAAW,iBAAIN,OAAA,CAACH,UAAU;QAACM,MAAM,EAAEG;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEf;AAACR,EAAA,CAVQD,UAAU;EAAA,QACFL,aAAa;AAAA;AAAAe,EAAA,GADrBV,UAAU;AAYnB,eAAeK,WAAWA,CAAA,EAAE;EAC1B,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAC5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAMnB,IAAI,CAAC;MAACoB,OAAO,EAAE;IAA0B,CAAC,EAAE;MAACC,MAAM,EAAE;IAAG,CAAC,CAAC;EAClE,CAAC,MAAM;IACL,MAAMC,OAAO,GAAG,MAAML,QAAQ,CAACjB,IAAI,CAAC,CAAC;IACrC,OAAOsB,OAAO,CAACd,MAAM;EACvB;AACF;AACA,OAAO,MAAMe,MAAM,GAAIA,CAAA,KAAM;EAC3B,OAAOxB,KAAK,CAAC;IACXS,MAAM,EAAEG,WAAW,CAAC;EACtB,CAAC,CAAC;AACJ,CAAC;AAED,eAAeL,UAAU;AAAC,IAAAU,EAAA;AAAAQ,YAAA,CAAAR,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}