{"ast":null,"code":"var _jsxFileName = \"/Users/harjobanpreetsinghsidhu/Downloads/Router 2 Project/frontend/src/pages/NewEventPage.jsx\";\nimport React from 'react';\nimport EventForm from '../components/EventForm';\nimport { json, redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewEventPage = () => {\n  return /*#__PURE__*/_jsxDEV(EventForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 7\n  }, this);\n};\n_c = NewEventPage;\nexport async function action({\n  request,\n  params\n}) {\n  const data = await request.formData();\n  const eventData = {\n    title: data.get('title'),\n    image: data.get('image'),\n    date: data.get('date'),\n    description: data.get('description')\n  };\n  const response = await fetch('http://localhost:8080/events', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (response.status === 422) {\n    return response;\n  }\n  if (!response.ok) {\n    throw json({\n      message: 'Could not send the data to the server'\n    }, {\n      status: 500\n    });\n  } else {\n    return redirect('/events');\n  }\n}\nexport default NewEventPage;\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["React","EventForm","json","redirect","jsxDEV","_jsxDEV","NewEventPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","params","data","formData","eventData","title","get","image","date","description","response","fetch","method","headers","body","JSON","stringify","status","ok","message","$RefreshReg$"],"sources":["/Users/harjobanpreetsinghsidhu/Downloads/Router 2 Project/frontend/src/pages/NewEventPage.jsx"],"sourcesContent":["import React from 'react'\nimport EventForm from '../components/EventForm'\nimport { json, redirect } from 'react-router-dom'\n\nconst NewEventPage = () => {\n  return (\n      <EventForm />\n  )\n}\nexport async function action({request, params}){\n        const data = await request.formData()\n\n        const eventData = {\n            title: data.get('title'),\n            image: data.get('image'),\n            date: data.get('date'),\n            description: data.get('description')\n        }\n\n        const response = await fetch('http://localhost:8080/events', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(eventData)\n        })\n\n        if(response.status === 422){\n            return response\n        }\n\n        if(!response.ok){\n            throw json({message: 'Could not send the data to the server'}, {status: 500})\n        } else {\n            return redirect('/events')\n        }\n}\nexport default NewEventPage\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,SAASC,IAAI,EAAEC,QAAQ,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EACzB,oBACID,OAAA,CAACJ,SAAS;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAEnB,CAAC;AAAAC,EAAA,GAJKL,YAAY;AAKlB,OAAO,eAAeM,MAAMA,CAAC;EAACC,OAAO;EAAEC;AAAM,CAAC,EAAC;EACvC,MAAMC,IAAI,GAAG,MAAMF,OAAO,CAACG,QAAQ,CAAC,CAAC;EAErC,MAAMC,SAAS,GAAG;IACdC,KAAK,EAAEH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBC,KAAK,EAAEL,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBE,IAAI,EAAEN,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;IACtBG,WAAW,EAAEP,IAAI,CAACI,GAAG,CAAC,aAAa;EACvC,CAAC;EAED,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;IACzDC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,SAAS;EAClC,CAAC,CAAC;EAEF,IAAGM,QAAQ,CAACO,MAAM,KAAK,GAAG,EAAC;IACvB,OAAOP,QAAQ;EACnB;EAEA,IAAG,CAACA,QAAQ,CAACQ,EAAE,EAAC;IACZ,MAAM7B,IAAI,CAAC;MAAC8B,OAAO,EAAE;IAAuC,CAAC,EAAE;MAACF,MAAM,EAAE;IAAG,CAAC,CAAC;EACjF,CAAC,MAAM;IACH,OAAO3B,QAAQ,CAAC,SAAS,CAAC;EAC9B;AACR;AACA,eAAeG,YAAY;AAAA,IAAAK,EAAA;AAAAsB,YAAA,CAAAtB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}